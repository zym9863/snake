name: Build and Release

on:
  push:
    tags:
      - 'v*'
  release:
    types: [created]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.3'
        channel: 'stable'
    
    - name: Install dependencies
      run: flutter pub get
    
    - name: Enable Windows desktop
      run: flutter config --enable-windows-desktop
    
    - name: Build Windows executable
      run: flutter build windows --release
    
    - name: Create Windows archive
      run: |
        cd build/windows/x64/runner/Release
        7z a ../../../../../snake-windows.zip *
    
    - name: Upload Windows artifact
      uses: actions/upload-artifact@v4
      with:
        name: windows-release
        path: snake-windows.zip

  build-android:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'
    
    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.3'
        channel: 'stable'
    
    - name: Install dependencies
      run: flutter pub get
    
    - name: Build Android APK with split-per-abi
      run: flutter build apk --release --split-per-abi
    
    - name: List APK files
      run: ls -la build/app/outputs/flutter-apk/
    
    - name: Upload Android artifacts
      uses: actions/upload-artifact@v4
      with:
        name: android-release
        path: build/app/outputs/flutter-apk/*.apk

  release:
    needs: [build-windows, build-android]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Download Windows artifact
      uses: actions/download-artifact@v4
      with:
        name: windows-release
    
    - name: Download Android artifacts
      uses: actions/download-artifact@v4
      with:
        name: android-release
    
    - name: List downloaded files
      run: ls -la
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        body: |
          ## 🎮 Snake Game Release ${{ github.ref_name }}
          
          ### 📦 下载文件 (Download Files)
          
          - **Windows**: `snake-windows.zip` - Windows 桌面版本
          - **Android**: 
            - `app-arm64-v8a-release.apk` - ARM64 设备 (推荐)
            - `app-armeabi-v7a-release.apk` - ARM 32位设备
            - `app-x86_64-release.apk` - x86_64 设备
          
          ### 🚀 安装说明 (Installation)
          
          **Windows**: 
          1. 下载 `snake-windows.zip`
          2. 解压到任意文件夹
          3. 运行 `snake.exe`
          
          **Android**: 
          1. 下载对应您设备架构的 APK 文件
          2. 在手机上启用"未知来源"安装
          3. 安装 APK 文件
          
          ### 🎯 游戏特色 (Features)
          - 经典贪吃蛇游戏
          - 跨平台支持 (Windows & Android)
          - 流畅的游戏体验
          
        draft: false
        prerelease: false
    
    - name: Upload Windows Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./snake-windows.zip
        asset_name: snake-windows.zip
        asset_content_type: application/zip
    
    - name: Upload Android ARM64 Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./app-arm64-v8a-release.apk
        asset_name: snake-android-arm64-v8a.apk
        asset_content_type: application/vnd.android.package-archive
      continue-on-error: true
    
    - name: Upload Android ARMv7 Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./app-armeabi-v7a-release.apk
        asset_name: snake-android-armeabi-v7a.apk
        asset_content_type: application/vnd.android.package-archive
      continue-on-error: true
    
    - name: Upload Android x86_64 Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./app-x86_64-release.apk
        asset_name: snake-android-x86_64.apk
        asset_content_type: application/vnd.android.package-archive
      continue-on-error: true
